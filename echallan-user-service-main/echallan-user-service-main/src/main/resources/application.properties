server.port=8082
spring.application.name=eChallan-user-service


# ===============================
# = Eureka Server setup
# ===============================
eureka.client.service-url.defaultZone=http://localhost:8080/eureka
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.preferIpAddress=true
eureka.instance.non-secure-port-enabled=true
security.basic.enable=false   
management.security.enabled=false
hystrix.command.default.execution.timeout.enabled=false


# ===============================
# Set here configurations for the database connection
# ===============================

#spring.datasource.url=jdbc:postgresql://localhost:5432/springbootdb
#spring.datasource.username=postgres
#spring.datasource.password=postgres@123
#spring.datasource.driver-class-name=org.postgresql.Driver
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
#
#
## ===============================
## = JPA / HIBERNATE
## Show or not log for each sql query
## ===============================
#
#spring.jpa.show-sql=true
## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=none
#
## Naming strategy
#spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
#spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
#
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
